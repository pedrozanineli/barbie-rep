* GENERATED BY CHARMM-GUI (http://www.charmm-gui.org) v3.7 on Jun, 02. 2024. JOBID=1734830673
* Create topology and parameters for 3-bead polymer approximation of each
* uploaded membrane component.
*

DIMENS CHSIZE 5000000 MAXRES 5000000 MAXGRP 5000000

! Read topology and parameter files
stream toppar.str

set prefix = step2_make_toppar
set getvol = get_volume.str

! output files for make_toppar
set topfile = @{prefix}.rtf
set paramfile = @{prefix}.prm

calc membZ = 0 ! membrane thickness
calc mtoplen = @membZ / 2
calc mbotlen = -@mtoplen

! make an array of sort types
set all_types_1 = memb
set all_types_2 = solvated
set all_types_3 = solvent
set all_types_4 = ion
calc sorti = 1
calc alli = 1
calc nsorttypes = 0
calc nalltypes = 4
label MAKE_SORT_TYPES
    set sort_type = @{all_types_@@alli}
    stream sorted_info.str 0 @{sort_type}
    if numtype .gt. 0 then
        set sort_type_@sorti = @{sort_type}
        incr sorti
        incr nsorttypes
    endif

    incr alli
    if alli .le. @nalltypes goto MAKE_SORT_TYPES

set typeind = 1
set sort_type = @{sort_type_1}
set sorti = 1
stream upload_info.str 1
label WRITE_TITLES
    write title card name polinfo/struct_@sorti.str
    ** polymer bead radii and relative positions for @{sort_type}
    **
    *
    incr sorti
    if num_uploaded .ge. @sorti goto WRITE_TITLES

stream sorted_info.str 0 memb
if numtype .le. 0 goto END_GET_INFO

set typeind = 1
set sort_type = @{sort_type_1}
set sorti = 1
set retlabel = GET_INFO
label GET_INFO
    if sort_type .eq. memb then
        ! get this structure's index as STRUCTI
        stream sorted_info.str @sorti @{sort_type}

        ! get PSFFILE and CRDFILE
        stream upload_info.str @structi

        read psf  card name @psffile
        read coor card name @crdfile

        ! center along XY, keep Z intact
        coor stat select all end
        coor trans xdir -?xave ydir -?yave

        define PROT select all end

        read sequence DUM 3
        generate TEMP warn
        define TEMP select segid TEMP end

        ! tracks which spheres need to be generated
        set above = 0
        set inside = 0
        set below = 0

        ! get atoms above, inside, and below membrane
        define ABOVE select prop z .gt. @mtoplen .and. PROT end
        set nabove = ?nsel
        if nabove .gt. 0 set above 1

        define BELOW select prop z .lt. @mbotlen .and. PROT end
        set nbelow = ?nsel
        if nbelow .gt. 0 set below 1

        define INSIDE select .not. ABOVE .and. .not. BELOW .and. PROT end
        set ninside = ?nsel
        if ninside .gt. 0 set inside 1

        open append unit 10 card name polinfo/struct_@structi.str
        write title unit 10
        *set above = @above
        *set inside = @inside
        *set below = @below
        *

        ! determine which parameters are needed
        set do_angle = 0
        set do_angle_@structi = 0
        set do_bond_ai = 0
        set do_bond_ai_@structi = 0
        set do_bond_ib = 0
        set do_bond_ib_@structi = 0

        if nabove .ne. 0 if nbelow .ne. 0 if ninside .ne. 0 set do_angle = 1
        if do_angle .eq. 1 set do_angle_@structi = 1

        if nabove .ne. 0 if ninside .ne. 0 set do_bond_ai = 1
        if do_bond_ai .eq. 1 set do_bond_ai_@structi = 1

        if nbelow .ne. 0 if ninside .ne. 0 set do_bond_ib = 1
        if do_bond_ib .eq. 1 set do_bond_ib_@structi = 1

        ! derive parameters from current atom positions
        if nabove .ne. 0 then
            stream @getvol ABOVE 1.4

            calc above_r = @radius
            calc above_x = ?xave
            calc above_y = ?yave
            calc above_z = ?zave

            coor set xdir ?xave -
                     ydir ?yave -
                     zdir ?zave -
                     select atom TEMP 1 DUM end

            write title unit 10
            *set above_x = @{above_x}
            *set above_y = @{above_y}
            *set above_z = @{above_z}
            *set above_r = @{above_r}
            *
        endif

        if ninside .ne. 0 then
            stream @getvol INSIDE 0

            calc inside_r = @radius
            calc inside_x = ?xave
            calc inside_y = ?yave
            calc inside_z = ?zave

            coor set xdir ?xave -
                     ydir ?yave -
                     zdir ?zave -
                     select atom TEMP 2 DUM end

            write title unit 10
            *set inside_x = @{inside_x}
            *set inside_y = @{inside_y}
            *set inside_z = @{inside_z}
            *set inside_r = @{inside_r}
            *
        endif

        if nbelow .ne. 0 then
            stream @getvol BELOW 1.4

            calc below_r = @radius
            calc below_x = ?xave
            calc below_y = ?yave
            calc below_z = ?zave

            coor set xdir ?xave -
                     ydir ?yave -
                     zdir ?zave -
                     select atom TEMP 3 DUM end

            write title unit 10
            *set below_x = @{below_x}
            *set below_y = @{below_y}
            *set below_z = @{below_z}
            *set below_r = @{below_r}
            *
        endif

        if do_angle .ne. 0 then
            quick select atom TEMP 1 DUM end -
                  select atom TEMP 2 DUM end -
                  select atom TEMP 3 DUM end

            calc angle_@structi = ?thet
        endif

        if do_bond_ai .ne. 0 then
            quick select atom TEMP 1 DUM end -
                  select atom TEMP 2 DUM end

            calc dist_ai_@structi = ?dist
        endif

        if do_bond_ib .ne. 0 then
            quick select atom TEMP 2 DUM end -
                  select atom TEMP 3 DUM end

            calc dist_ib_@structi = ?dist
        endif

        calc nincr = @above + @inside + @below
    endif

    delete atoms select all end

    incr sorti
    if numtype .ge. @sorti then
        goto @retlabel
    else
        incr typeind
        set sorti = 1
        if typeind .le. @nsorttypes then
            set sort_type = @{sort_type_@@typeind}
            goto @retlabel
        endif
    endif

label END_GET_INFO

! Ensure clean TOP/PAR
write title name @topfile formatted
** Topology for polymer beads
**
*36  1
*

write title name @paramfile formatted
** Parameters for polymer beads
**
*

open append unit 10 card name @topfile
open append unit 11 card name @paramfile

write title unit 11
*ATOMS
*

set typeind = 1
set sort_type = @{sort_type_1}
set sorti = 1
set retlabel = WRITE_MASS
label WRITE_MASS
    stream sorted_info.str @sorti @{sort_type}
    stream polinfo/struct_@{structi}.str
    set pname = POL@structi

    if sort_type .eq. memb then
        if above .ne. 0 then
            write title unit 10
            *MASS -1    @{pname}A   30.97400
            *

            write title unit 11
            *MASS -1    @{pname}A   30.97400
            *
        endif
        if inside .ne. 0 then
            write title unit 10
            *MASS -1    @{pname}I   30.97400
            *

            write title unit 11
            *MASS -1    @{pname}I   30.97400
            *
        endif
        if below .ne. 0 then
            write title unit 10
            *MASS -1    @{pname}B   30.97400
            *

            write title unit 11
            *MASS -1    @{pname}B   30.97400
            *
        endif
    else
        write title unit 10
        *MASS -1    @{pname}    30.97400
        *

        write title unit 11
        *MASS -1    @{pname}    30.97400
        *
    endif

    incr sorti
    if numtype .ge. @sorti then
        goto @retlabel
    else
        incr typeind
        set sorti = 1
        if typeind .le. @nsorttypes then
            set sort_type = @{sort_type_@@typeind}
            goto @retlabel
        endif
    endif

set typeind = 1
set sort_type = @{sort_type_1}
set sorti = 1
set retlabel = WRITE_RESIDUES
label WRITE_RESIDUES
    stream sorted_info.str @sorti @{sort_type}
    stream polinfo/struct_@{structi}.str
    set pname = POL@structi

    write title unit 10
    *RESI @{pname}      0.00
    *GROUP
    *

    if sort_type .eq. memb then
        if above .ne. 0 then
            write title unit 10
            *ATOM @{pname}A    @{pname}A    0.00
            *
        endif

        if inside .ne. 0 then
            write title unit 10
            *ATOM @{pname}I    @{pname}I    0.00
            *
        endif

        if below .ne. 0 then
            write title unit 10
            *ATOM @{pname}B    @{pname}B    0.00
            *
        endif

        if @{do_bond_ai_@@structi} .ne. 0 then
            write title unit 10
            *BOND @{pname}A @{pname}I
            *
        endif

        if @{do_bond_ib_@@structi} .ne. 0 then
            write title unit 10
            *BOND @{pname}I @{pname}B
            *
        endif
    else
        write title unit 10
        *ATOM @{pname}     @{pname}     0.00
        *
    endif

    write title unit 10
    *PATCHING FIRST NONE LAST NONE
    *

    incr sorti
    if numtype .ge. @sorti then
        goto @retlabel
    else
        incr typeind
        set sorti = 1
        if typeind .le. @nsorttypes then
            set sort_type = @{sort_type_@@typeind}
            goto @retlabel
        endif
    endif

write title unit 11
*BONDS
*

set typeind = 1
set sort_type = @{sort_type_1}
set sorti = 1
set retlabel = WRITE_BONDS
label WRITE_BONDS
    stream sorted_info.str @sorti @{sort_type}
    stream polinfo/struct_@{structi}.str
    set pname = POL@structi

    if sort_type .eq. memb then
        if @{do_bond_ai_@@structi} .ne. 0 then
            write title unit 11
            *@{pname}A @{pname}I  400.0  @{dist_ai_@@structi}
            *
        endif
        
        if @{do_bond_ib_@@structi} .ne. 0 then
            write title unit 11
            *@{pname}I @{pname}B  400.0  @{dist_ib_@@structi}
            *
        endif
    endif

    incr sorti
    if numtype .ge. @sorti then
        goto @retlabel
    else
        incr typeind
        set sorti = 1
        if typeind .le. @nsorttypes then
            set sort_type = @{sort_type_@@typeind}
            goto @retlabel
        endif
    endif

write title unit 11
*ANGLES
*

set typeind = 1
set sort_type = @{sort_type_1}
set sorti = 1
set retlabel = WRITE_ANGLES
label WRITE_ANGLES
    stream sorted_info.str @sorti @{sort_type}
    stream polinfo/struct_@{structi}.str
    set pname = POL@structi

    if sort_type .eq. memb then
        if @{do_angle_@@structi} .ne. 0 then
            write title unit 11
            *@{pname}A @{pname}I @{pname}B  400.0 @{angle_@@structi}
            *
        endif
    endif

    incr sorti
    if numtype .ge. @sorti then
        goto @retlabel
    else
        incr typeind
        set sorti = 1
        if typeind .le. @nsorttypes then
            set sort_type = @{sort_type_@@typeind}
            goto @retlabel
        endif
    endif

! TODO: auto determine good cutoff distances; may imply larger minimum
! system size in XYZ
write title unit 11
*NONBONDED nbxmod  5 atom cdiel shift vatom vdistance vswitch --

*cutnb 40.0 ctofnb 35.0 ctonnb 30.0 eps 1.0 e14fac 1.0 wmin 1.5
*

set typeind = 1
set sort_type = @{sort_type_1}
set sorti = 1
set retlabel = WRITE_NBONDS
stream sorted_info.str 0 @{sort_type}
label WRITE_NBONDS
    stream sorted_info.str @sorti @{sort_type}
    stream polinfo/struct_@{structi}.str
    set pname = POL@structi

    if sort_type .eq. memb then
        set addr = 5
        if above .ne. 0 then
            calc aminr = @{above_r} + @addr
            write title unit 11
            *@{pname}A   0.0  -0.10  @aminr
            *
        endif

        if inside .ne. 0 then
            calc iminr = @{inside_r} + @addr
            write title unit 11
            *@{pname}I   0.0  -0.10  @iminr
            *
        endif

        if below .ne. 0 then
            calc bminr = @{below_r} + @addr
            write title unit 11
            *@{pname}B   0.0  -0.10  @bminr
            *
        endif
    else
        set addr = 0
        if sort_type .eq. solvated set addr = 5
        stream psfcrdreader/struct_@{structi}.str
        calc minr = @radius + @addr
        write title unit 11
        *@{pname}    0.0  -0.10  @minr
        *
    endif

    incr sorti
    if numtype .ge. @sorti then
        goto @retlabel
    else
        incr typeind
        set sorti = 1
        if typeind .le. @nsorttypes then
            set sort_type = @{sort_type_@@typeind}
            stream sorted_info.str 0 @{sort_type}
            goto @retlabel
        endif
    endif

write title unit 11
*END
*


